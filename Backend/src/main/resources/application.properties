spring.application.name=demo
server.port=9999

# JWT 관련 정보
spring.security.jwt.cookie.name=_auth_enticate_fo_lio_
spring.security.jwt.secret=9e7$KwN!4z8Lr@BqA0mF#t3^YcVpZx61JbUd*oW!nSqMh2GgPiRsDcVv&LjEyTc#
spring.security.jwt.expires=3600
spring.security.cors.site=http://localhost:3000
spring.security.cors.same.domain=localhost

# DB 접속 정보 
spring.datasource.url=jdbc:oracle:thin:@//gold-black.c1ww6goae3s3.ap-northeast-2.rds.amazonaws.com:1521/orcl
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
spring.jpa.database=oracle
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create

# DB 접속 계정
spring.datasource.username=project_2505_ATeam           
spring.datasource.password=wjkl23opFKEmliei2lknfe

# Naver
spring.security.oauth2.client.registration.naver.client-id=bcrnj9_K3_0D6NrNoDlE
spring.security.oauth2.client.registration.naver.client-secret=t7jlzQpSEa
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9999/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao
spring.security.oauth2.client.registration.kakao.client-id=634b8d00b48008e6b0e28cba9cfd33ed
spring.security.oauth2.client.registration.kakao.client-secret=4cYEoC3WbgmDr0akUgL2fkM2d1a7WWfm
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:9999/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=kakao_account

# Google
spring.security.oauth2.client.registration.google.client-id=1084223408713-d979e7a3cmsvnks8l0s0b1dlhcf1jnil.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9999/login/oauth2/code/google
spring.security.oauth2.client.registration.google.scope=profile,email


event.upload.dir=./images/event
store.upload.dir=./images/store
movie.upload.dir=./images/movie


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# 예매 가능 날짜 조회 기간 설정
booking.max-advance-days=1


# 디비 한글깨짐 방지
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

#brevo 이메일 보내기 https://app.brevo.com/
spring.mail.host=smtp-relay.brevo.com
spring.mail.port=587
spring.mail.username=8f26f3002@smtp-brevo.com
# 시크릿비밀번호 깃에올리니 보완위험으로 경고받음 시크릿키는 따로 배포하겠슴
# 비밀번호작성후에 절대 커밋금지 / 커밋하기전에 이거지우세요
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.default-encoding=UTF-8